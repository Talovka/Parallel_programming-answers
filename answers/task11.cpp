#include <stdio.h>
#include <omp.h>
int main(int argc, char *argv[])
{
   int A[10], B[10], C[10], i, n;
/* Заполним исходные массивы */
   for (i=0; i<10; i++){ A[i]=i; B[i]=2*i; C[i]=0; }
#pragma omp parallel shared(A, B, C) private(i, n)// Условие shared говорит о том, что массив a является 
   //разделяемым между потоками и его значение сохраняется при выходе из параллельного участка кода.
   //Условие private указывает на то, что каждый поток
   //должен иметь свою копию переменной на всем протяжении своего исполнения.
   {
      /* Получим номер текущей нити */
      n=omp_get_thread_num();
#pragma omp for
      for (i=0; i<10; i++)
      {
         C[i]=A[i]+B[i];
         printf("Нить %d сложила элементы с номером %d\n", 
                n, i);
      }
   }
}
