#include <stdio.h>
#include <omp.h>
//подключаем заголовки
int main(int argc, char *argv[])
{
   int n;
#pragma omp parallel private(n)//Каждый поток должен иметь свою копию переменной n на всем протяжении своего исполнения.
   {
      n=omp_get_thread_num();//возвращает номер потока
#pragma omp sections//Каждая секция выполняется в отдельном потоке, что позволяет производить декомпозицию по коду.
      //Точкой синхронизации является конец блока sections. 
      //В случае, когда необходимо чтобы основной поток не ждал завершения
      //остальных потоков следует использовать условие nowait.
      {
#pragma omp section
         {
            printf("Первая секция, процесс %d\n", n);//Выводится 1 поток
         }
#pragma omp section
         {
            printf("Вторая секция, процесс %d\n", n);//Выводится 1 поток
         }
#pragma omp section
         {
            printf("Третья секция, процесс %d\n", n);//Выводится 1 поток
         }
      }
      printf("Параллельная область, процесс %d\n", n);//Выводятся 4 потока
   }
}
